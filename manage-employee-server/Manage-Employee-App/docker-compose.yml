version: '3.8'

services:
  Manage-Employee-App:
    build:
      context: .
      dockerfile: DockerFile #thực hiện với thư mục hiện tại và file DockerFile
#    image: openjdk:17-jdk-slim
    image: miglee/manager_employee_app:latest # tham chiếu tới docker hub
    container_name: manage-employee-app
    command: java -jar ./target/demo-0.0.1-SNAPSHOT.jar
    ports:
      - "8080:8080"
    working_dir: /Manage-Employee-App # thư mục làm việc
    volumes:
      - ./target:/Manage-Employee-App/target
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/Manage_Employee_App
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: minh1892001

  mysql:
    image: mysql:8.0
    container_name: mysql
    volumes:
      - mysql-data-Manage_Employee_App:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: minh1892001
      MYSQL_DATABASE: Manage_Employee_App
  zoo1:
    image: confluentinc/cp-zookeeper:7.3.2
    hostname: zoo1
    container_name: zoo1
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zoo1:2888:3888

  kafka1:
    image: confluentinc/cp-kafka:7.3.2
    hostname: kafka1
    container_name: kafka1
    ports:
      - "9092:9092"
      - "29092:29092"
      - "9999:9999"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka1:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_JMX_PORT: 9999
      KAFKA_JMX_HOSTNAME: ${DOCKER_HOST_IP:-127.0.0.1}
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
    depends_on:
      - zoo1

  redis:
    image: redis:6.2
    container_name: redis

volumes:
  mysql-data-Manage_Employee_App:
